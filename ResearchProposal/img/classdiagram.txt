@startuml
hide empty members
hide circle
skinparam linetype ortho

class Consumer {
    concept_map: ConceptMap
    SOURCES: list[string]
    provide_map(): ConceptMap
    handler(): void
    authenticate(): User
    generate_response(): dict
}

class ConceptMap {
    get_partial_map(edge): ConceptMap
}

class Node {
    label : StringField
}

ConceptMap "1" *-- "0..*" Node : nodes

class Edge {
    label : StringField
    source : StringField
}

ConceptMap "1" *-- "0..*" Edge : edges
Node "2" o-- "0..*" Edge : from, to

class Flashcard {
    source : StringField
    question : StringField
    answer : StringField
    response_model : ListField[StringField]
}

Edge "0..*" o-- "0..*" Flashcard : edge

class User {
    name : StringField
    birthdate : IntField
    flashmap_condition : BooleanField
    read_sources : ListField[StringField]
    gender : StringField
    code : StringField
    set_descriptives(gender, birthdate, code)
    create_test(flashcards, items): Test
    append_test(flashcard_responses, item_responses): void
    create_questionnaire(items): Questionnaire
    append_questionnaire(item_responses, good, could_be_improved, email): void
    get_due_instance(): FlashInstance
}

Consumer "1" o-- "1" User : user

class Logentry {
    timestamp : IntField
    keyword : StringField
    data : DictField
}

Logentry "0..*" o-- "1" User : user

class Test {
    generate_test(items, prev_items) : list(items)
    append_flashcard(flashcard, answer) : void
    append_item(item, answer) : void
}

User "1" *-- "0..2" Test : tests

class TestItem {
    question : StringField
    source : StringField
    response_model : ListField[StringField]
}


class TestItemResponse {
    answer : StringField
}

Test "1" *-- "5" TestItemResponse : item_responses
TestItem "1" o-- "0..*" TestItemResponse : item

class TestFlashcardResponse {
    answer : StringField
}

Test "1" *-- "5" TestFlashcardResponse: flashcard_responses
Flashcard "1" o-- "0..*" TestFlashcardResponse : flashcard

class QuestionnaireItem {
    usefulness : BooleanField
    positive_phrasing : StringField
    negative_phrasing : StringField
}

class Questionnaire {
    good : StringField
    can_be_improved : StringField
    append_item(item, answer): void
}
    
User "1" *-- "0..1" Questionnaire : questionnaire

class QuestionnaireResponse {
    answer : IntField
    phrasing : BooleanField
}

Questionnaire "1" *-- "0..*" QuestionnaireResponse : responses
QuestionnaireItem "1" o-- "0..*" QuestionnaireResponse : item

abstract class FlashInstance {
    due_date : IntField
    schedule() : void
}

class FlashcardInstance

FlashInstance <|.. FlashcardInstance
Flashcard "1" o-- "0..*" FlashcardInstance : flashcard
User "1" *-- "0..*" FlashcardInstance : instances

class FlashmapInstance

FlashInstance <|.. FlashmapInstance
Edge "1" o-- "0..*" FlashmapInstance : edge
User "1" *-- "0..*" FlashmapInstance : instances

abstract class Response {
    start : DateField
    end : DateField
    correct : BooleanField
}

class FlashcardResponse

Response <|.. FlashcardResponse
FlashcardInstance "1" *-- "0..*" FlashcardResponse : responses

class FlashmapResponse

Response <|.. FlashmapResponse
FlashmapInstance "1" *-- "0..*" FlashmapResponse : responses

class Session {
    start : DateField
    end : DateField
    source_prompted : BooleanField
    browser : StringField
    end_session(): void
}

User "1" *-- "0..*" Session : sessions

@enduml
